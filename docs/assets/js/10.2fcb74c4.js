(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{180:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("사실 Java에서 이 개념을 별로 써보진 않은 것 같다. "),a("s",[t._v("오히려 Verilog에서 이 개념을 많이 썼다.")]),t._v(" Java에서 named parameters를 사용하는 법에 대해 쓴 다른 "),a("a",{attrs:{href:"https://javax0.wordpress.com/2014/08/27/named-parameters-in-java/",target:"_blank",rel:"noopener noreferrer"}},[t._v("블로그 글"),a("OutboundLink")],1),t._v("을 링크한다.\n여러 인자를 받는 함수가 있을 때, 내가 원하는 인자만을 입력할 수 있을까? 인자의 Type만 달라지는 경우라면, Java에서 나는 아마 다음과 같이 했을 것 같다.")]),t._v(" "),t._m(1),a("p",[t._v("그런데 이것은 Named Arguments와는 다르다. 이것은 그저 다른 인자 타입에 대해 다른 행동을 지정한 것일 뿐이다. 잠시 오버로딩, 오버라이딩 등에 대해 알아보고 넘어가자.")]),t._v(" "),t._m(2),t._v(" "),a("p",[a("a",{attrs:{href:"https://ko.wikipedia.org/wiki/%EC%97%B0%EC%82%B0%EC%9E%90_%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9",target:"_blank",rel:"noopener noreferrer"}},[t._v("오버로딩"),a("OutboundLink")],1),t._v("은 함수나 연산자의 이름은 그대로 유지하면서, 받는 인자의 종류에 따라 동작을 다르게 정의하는 것을 뜻한다. 위의 예시 코드처럼.")]),t._v(" "),t._m(3),t._v(" "),a("p",[a("a",{attrs:{href:"https://ko.wikipedia.org/wiki/%EB%A9%94%EC%86%8C%EB%93%9C_%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9",target:"_blank",rel:"noopener noreferrer"}},[t._v("오버라이딩"),a("OutboundLink")],1),t._v("은 부모 클래스의 메소드를 자식 클래스가 특정한 형태로 구현하는 것을 의미한다.")]),t._v(" "),a("p",[t._v("Named Arguments는 이 둘과 달리 여러 인자를 한 번에 받는 메소드에 대해, 내가 원하는 특정 인자들의 값만을 입력하고 나머지 인자는 기본값으로 연산을 수행하는 것을 말한다.")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),a("p",[t._v('우리는, 예컨대 "a, b, c"의 Collection에 대해,\n앞뒤로 "[", "]"를 붙여 "[a, b, c]"의 String을 return하는 method joinOptions를 만들어야 한다. prefix와 postfix만을 설정하는 것이다.')]),t._v(" "),a("p",[t._v("답은 간단하다.")]),t._v(" "),t._m(7),a("p",[t._v("와 같은 식으로 named arguments를 사용할 수 있다.")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"named-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#named-arguments","aria-hidden":"true"}},[this._v("#")]),this._v(" Named Arguments")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("someClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" intParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String strnParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Do something\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" intParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Do something\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String strnParam1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String strnParam2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Do something\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"오버로딩-overloading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#오버로딩-overloading","aria-hidden":"true"}},[this._v("#")]),this._v(" 오버로딩 Overloading")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"오버라이딩-overriding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#오버라이딩-overriding","aria-hidden":"true"}},[this._v("#")]),this._v(" 오버라이딩 Overriding")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예제","aria-hidden":"true"}},[this._v("#")]),this._v(" 예제")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("이 예제는 이미 정의된 joinToString method에 대해, 어떻게 named arguments를 구현할 것인지를 묻는다. "),s("code",[this._v("Collection")]),this._v(" Class에 대한 method "),s("code",[this._v("joinToString")]),this._v("은 다음과 같다:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-Kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    separator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    postfix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-Kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Collection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"["')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" postfix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="koan2.md";s.default=e.exports}}]);